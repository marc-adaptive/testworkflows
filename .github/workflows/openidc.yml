name: "testworkflows"
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  id-token: write

env:
  JF_URL: 'http://localhost:8081'
  OIDC_AUDIENCE: 'my-aud'
  PLATFORM_REPO: 'generic-local'

jobs:
  build-c:
    runs-on: [self-hosted]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}
      - name: Publish Build info With JFrog CLI
        run: |
          touch file.txt
          jf rt u file.txt generic-local/file.txt

  build-java:
    runs-on: [self-hosted]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Publish Build info With JFrog CLI
        run: |
          jf gradle-config --use-wrapper --repo-deploy=test-maven-repo
          jf gradle clean artifactoryPublish --no-daemon -b ./build.gradle
          jf rt bp

name: "oidc-test2"
run-name: "${{ github.actor }} triggered ${{ github.workflow }}"
on:
  workflow_dispatch:
    inputs:
      run-ci:
        description: Should run ci
        required: true
        default: true
        type: boolean

env:
  JF_URL: http://localhost:8081
  OIDC_PROVIDER: 'github-jfrog'
  OIDC_AUDIENCE: 'my-aud'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
#  publish-java:
#    name: Publish cluster java artifacts to repo
#    permissions:
#      id-token: write
#    #needs
#    runs-on: [self-hosted]
#    #environment
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.sha }}
#      - name: Setup JFrog CLI
#        uses: jfrog/setup-jfrog-cli@v4
#        with:
#          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
#          oidc-audience: ${{ env.OIDC_AUDIENCE }}
#      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
#        run: |
#          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
#          echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV
#      - name: Setup java
#        uses: actions/setup-java@v4
#        with:
#          java-version: '8'
#          distribution: 'zulu'
#      - name: Publish Build info With JFrog CLI
#        run: |
#          jf gradle-config --use-wrapper --repo-deploy=test-maven-repo
#          jf gradle clean artifactoryPublish --no-daemon -b ./build.gradle
#          jf rt bp

  publish-c:
    name: Publish c builds
    permissions:
      id-token: write
    runs-on: [self-hosted]
    strategy:
      matrix:
        os:
          - ubuntu
        version:
          - latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          file: ./cppbuild/${{ matrix.os }}/Dockerfile
          pull: true
          shm-size: 2g
          outputs: build/${{ matrix.os }}
          target: essential-artifacts
          build-args: |
            VERSION = ${{ matrix.version }}
      - name: Publish Build info With JFrog CLI
        run: jf rt u build/${{ matrix.os }}*.txt generic-local/
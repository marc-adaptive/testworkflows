name: Edit version

on:
  workflow_dispatch:
    inputs:
      release:
        description: Is release?
        required: true
        type: boolean
      pre-build:
        description: Is this before build?
        required: true
        type: boolean
      major-version:
        required: true
        description: major
        type: number
      minor-version:
        required: true
        description: minor
        type: number
      patch-version:
        required: true
        description: patch
        type: number
  workflow_call:
    inputs:
      release:
        description: Is release?
        required: true
        type: boolean
      pre-build:
        description: Is this before build?
        required: true
        type: boolean
      major-version:
        required: true
        type: number
      minor-version:
        required: true
        type: number
      patch-version:
        required: true
        type: number
    outputs:
      sha:
        description: Current SHA after version update
        value: ${{ jobs.manage-version.outputs.sha }}

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  manage-version:
    name: Used to update version, tag repo, and return sha
    runs-on: self-hosted
    outputs:
      sha: ${{ steps.return-sha.sha }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Update Git Credentials
        id: git-credentials
        run: |
          git config user.name "github-actions"
          git config user.email "build@aeron.io"
      - name: Update Current Version
        id: pre-build-version-update
        if: ${{ inputs.pre-build && inputs.release }}
        run: |
          echo ${{ inputs.major-version }}.${{ inputs.minor-version }}.${{ inputs.patch-version }} > version.txt
      - name: Update to Next Version
        id: post-build-version-update
        if: ${{ !inputs.pre-build && inputs.release }}
        run: |
          let major=${{ inputs.major-version }}
          let minor=${{ inputs.minor-version }}
          let patch=${{ inputs.patch-version }}+1
          echo $major.$minor.$patch-SNAPSHOT > version.txt
      - name: Commit version to Current Branch
        id: commit-version
        if: ${{ inputs.release }}
        run: |
          git add version.txt
          git status
          git commit -m "${{ inputs.tagged-version }} released."
          git push
      - name: Tag Branch
        id: tag-branch
        if: ${{ inputs.pre-build && inputs.release }}
        run: |
          git tag -f ${{ inputs.tagged-version }}
          git push origin refs/tags/${{ inputs.tagged-version }}
      - name: Return current SHA
        id: return-sha
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"